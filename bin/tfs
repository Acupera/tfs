#!/usr/bin/env node

var program = require('commander');

program
  .usage('<command>')
  .command('add [itemspec] [options]', 'Adds files and folders from a local file system to a server for Team Foundation version control.Note   The results of this command are not reflected in the server for Team Foundation version control until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the add command, you must own the workspace and your Check out permission for the parent folder of the new items must be set to Allow. Your Lock permission must also be set to Allow if you use /lock:checkout or /lock:checkin. For more information, see Team Foundation Server Permissions.')
  .command('branch [olditem] [newitem] [options]', 'The branch command copies an item or set of items, including metadata and version control history, from one location to another in the Team Foundation version control server and in the local workspace.NoteThe results of this command are not reflected in the Team Foundation version control server until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the branch command, you must have the Read permission for the source item and the Check out and Merge permissions for the target folder set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('branches [itemspec] [options]', 'Displays the history of a branch for a specified file or folder.Required PermissionsTo use the branches command, your Read permission must be set to Allow for the item and any branches to view their history. For more information, see Team Foundation Server Permissions.')
  .command('changeset [options]', 'Displays information about and lets you change the attributes, such as comments and check-in notes, that are associated with a changeset.Required PermissionsTo use the changeset command you must have the Read permission set to Allow for any files or folders in the changeset for which you wish to display full information. The only users who can modify the notes and comments that are associated with a changeset are the users who created the changeset or a user who has the Revise other user\'s changes global permission. For more information, see Team Foundation Server Permissions.')
  .command('checkin [name]] [file)]] [text"|@notefile)]] [options]', 'Commits pending changes in the current workspace to the server for Team Foundation version control.Required PermissionsTo use the checkin command you must have the Check in permission set to Allow. To use /author option, you must have Check in other user\'s changes permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('checkout [options]', 'Makes the local file writable, and changes its Pending Change status to \"edit\" in the workspace. Edit is an alias for the Checkout command. For more information, see Pending Changes.Note   Any edits that you make to items that have been checked out are not reflected in the server for Team Foundation version control until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the checkout command, your Check out permission must be set to Allow, and you must be either the workspace owner or your global Administer workspaces permission must be set to Allow. Also, if you use the /lock option with a value other than none, your Lock permission must be set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('configure [options]', 'Enables an administrator to view and change the following configuration settings for a team project in the Source Control Settings dialog box:Check-out settingsCheck-in policiesCheck-in notesRequired PermissionsTo use the configure command, you must have the Edit server-level information permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('delete [itemspec] [options]', 'Removes files and folders from the Team Foundation version control server and deletes them from the disk.Note   The results of this command are not visible in other workspaces until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the delete command, you must have the Check out permission set to Allow. If you include the /lock option with a value other than none, you must have the Lock permission set to Allow. Additionally, you must own the workspace or have the global Administer workspaces permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('destroy [options]', 'Use the tf destroy command to destroy, or permanently delete, version-controlled files from Team Foundation version control. The destroy action cannot be reversed. You must not destroy files that are still needed. Sometimes you have to clean up version control systems. For example, if some files are infected with a computer virus, you have to remove them permanently from version control.Before you run tf destroy without the /keephistory option, we recommend that you first delete the files you want to destroy. For more information, see Delete Files and Folders from Version Control.After you delete the files you can synchronize the Team Foundation warehouse. Otherwise, the warehouse will not be synchronized with the destroyed items.Required PermissionsTo use the destroy command, you must belong to the Team Foundation Administrators security group. For more information, see Team Foundation Server Permissions.')
  .command('difference [header.h] [options]', 'Compares, and if it is possible, displays differences between two files, files in two folders, or a shelveset and a local or a server file.Required PermissionsTo use the difference command, you must have the Read permission for all specified items set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('dir [itemspec] [options]', 'The dir command displays all or some of the contents of the server for Team Foundation version control.Required PermissionsTo use the dir command, you must have Read permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('folderdiff [targetPath] [options]', 'Use the folderdiff command to display and compare a visual representation of the differences between files in two server folders, in a server folder and a local folder, or in two local folders. Required PermissionsTo use the folderdiff command, you must have the Read permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('get [options]', 'Retrieves a read-only copy of a file from the server for Team Foundation version control to the workspace and creates folders on disk to contain it.Required PermissionsTo use the get command, you must have the Read permission set to Allow for every retrieved item and you must either own the destination workspace or have the global Administer workspaces permission. For more information, see Team Foundation Server Permissions.')
  .command('history [itemspec] [options]', 'Displays the revision history for one or more files, folders or both.Required PermissionsTo use the history command, you must have Read permission set to Allow for all files or folders for which history is requested. For more information, see Team Foundation Server Permissions.')
  .command('label [labelname[@scope]] [options]', 'Attaches a label to or removes a label from a version of a file or folder in the server for Team Foundation version control.Required PermissionsTo use the label command, you must have the Label permission set to Allow. To modify or delete labels created by other users, you must have the Administer labels permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('labels [options]', 'Displays the list of labels in the server for Team Foundation version control.Required PermissionsTo use the labels command, you must have the Read permission set to Allow for all files or folders to which the specified label is attached. If you have permission to some, but not all the files referenced in the label, partial results are displayed. For more information, see Team Foundation Server Permissions.')
  .command('localversions [ItemSpec] [options]', 'Displays the version of one or more items in a workspace.Required PermissionsTo use the localversions command, you must have the Use permission to the workspace. For more information, see Team Foundation Server Permissions.')
  .command('lock [itemspec] [options]', 'Locks or unlocks a file or folder to deny or restore the right of users to check out an item for edit into a different workspace or to check in pending changes to an item from a different workspace.Required PermissionsTo use the lock command, you must have the Lock permission set to Allow. Having the Unlock other user\'s changes permission set to Allow is required to remove a lock held by another user if you do not have Write permission for that user\'s workspace. For more information, see Team Foundation Server Permissions.')
  .command('merge [source] [destination] [options]', 'The merge command applies changes from one branch into another.NoteThe results of this command are not reflected in the Team Foundation version control server until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the merge command, you must have the Check out permission set to Allow for the workspace folder that contains the destination and you must have the Read permission set to Allow for the workspace folder that contains the source. For more information, see Team Foundation Server Permissions.')
  .command('merges [destination] [options]', 'Displays detailed information about past merges between the specified source and destination branches.Required PermissionsTo use the merges command, you must have the Read permission set to Allow for both source and destination branches. For more information, see Team Foundation Server Permissions.')
  .command('permission [options]', 'Modifies the user access control list (ACL) and displays authorization settings for an item under version control.Required PermissionsTo use the permission command, you must have the Manipulate security settings permission set to Allow for the folders being modified, be a member of the Team Foundation Administrators security group, or be a system administrator on the local computer (Windows Administrator security group). For more information, see Team Foundation Server Permissions. ')
  .command('properties [itemspec] [options]', 'Displays information about items under version control.Required PermissionsTo use the properties command, you must have the Read permission set to Allow for all specified files and folders. For more information, see Team Foundation Server Permissions.')
  .command('rename [olditem] [newitem] [options]', 'The rename command changes the name or the path of a file or folder. You can use the rename command or the aliases move or ren, to move a file or folder to a new location.Note   The results of this command are not reflected in the Team Foundation version control server until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the rename command, you have the Check out permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('resolve [options]', 'Lets you resolve conflicts between changed items in your workspace and the latest or destination versions of items on the server.Required PermissionsTo use the resolve command, you must be either the workspace owner or have the global Administer workspaces permission set to Allow. You must also have the Read and Check out permissions for the items involved in a resolve operation set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('rollback [ItemSpec] [options]', 'You can use this command to roll back the effects of one or more changesets to one or more version-controlled items. This command does not remove the changesets from an item\'s version history. Instead, this command creates in your workspace a set of pending changes that negate the effects of the changesets that you specify.Required PermissionsTo use this command, you must have the Read, Check Out, and Check In permissions set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('shelve [options]', 'Stores a set of pending changes, together with pending check-in notes, a comment, and a list of associated work items on the server that is running Visual Studio Team Foundation Server without actually checking them into the version control server.Required PermissionsIf you want to use the shelve command to delete a shelveset, you must be a shelveset owner, or your Administer shelved changes permission must be set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('shelvesets [shelvesetname] [options]', 'Displays information about a set of shelved changes.Required PermissionsTo use the shelvesets command, you must the have Read permission and the Check out permission set to Allow for the items in the shelvesets. For more information, see Team Foundation Server Permissions.')
  .command('status [itemspec] [options]', 'Displays information about pending changes to items in one or more workspaces.Required PermissionsTo use the status command, you must have the Read permission set to Allow for all specified files or folders. For more information, see Team Foundation Server Permissions.')
  .command('undelete [options]', 'The undelete command restores items that were previously deleted.Note   The results of this command are not visible in other workspaces until you perform a check-in operation. For more information, see Check In Pending Changes.Required PermissionsTo use the undelete command, you must have the Check out permission set to Allow. If you include the /lock option with a value other than none, you must have the Lock permission set to Allow. Additionally, you must own the workspace or have the global Administer workspaces permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('undo [itemspec] [options]', 'Removes pending changes from a workspace.Required PermissionsTo use the undo command, you must be the owner of the specified workspace or have the global Administer workspaces permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('unlabel [labelname] [itemspec] [options]', 'Removes an item from an existing label in the server for Team Foundation version control.Required PermissionsTo use the unlabel command, you must either own the label, or have the Administer labels permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('unshelve [itemspec] [options]', 'Restores shelved file revisions, check-in notes, comments, and work item associations to the current workspace or removes an existing shelveset from the server.Required PermissionsTo use the unshelve command, you must have the Read permission set to Allow, and you must have the Check out permission for the items in the shelveset set to Allow. Additionally, to delete a shelveset, you must be its owner or have the Administer shelved changes global permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('view [itemspec] [options]', 'The view command retrieves a specific version of a file to a temporary folder on your computer and displays it.Required PermissionsTo use the view command, you must have the Read permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('workfold [localfolder] [options]', 'Creates, modifies, or displays information about the mappings between your workspace folders and the folders on the server for Team Foundation version control.Required PermissionsTo use the workfold command, you must be the owner of the specified or implied workspace or have the global Administer workspaces permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('workspace [options]', 'Lets you create, delete, view, or modify properties and mappings associated with a workspace.Required PermissionsTo modify or delete an existing workspace, you must be the owner or have the global Administer workspaces permission set to Allow. To create a workspace, you must have the global Create a workspace permission set to Allow. To create workspaces for other users, you must have the Administer workspaces permission set to Allow. For more information, see Team Foundation Server Permissions.')
  .command('workspaces [options]', 'Displays information about workspaces in the system and updates cached information about a user name or computer name change on the server that is running Visual Studio Team Foundation Server.Required PermissionsTo use the workspaces command, you must have the Read permission set to Allow. For more information, see Team Foundation Server Permissions.')
;

program.parse(process.argv);
