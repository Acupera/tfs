#!/usr/bin/env node

var hasError = false,
    program  = require('commander'),
    tfsGet = require('../lib/tfs/get');

program
  .description('Retrieves a read-only copy of a file from the server for Team Foundation version control to the workspace and creates folders on disk to contain it.Required PermissionsTo use the get command, you must have the Read permission set to Allow for every retrieved item and you must either own the destination workspace or have the global Administer workspaces permission. For more information, see Team Foundation Server Permissions.')
  .usage('[itemspec] [options]')
  .option('-v, --version', 'File or folder to retrieve. If no itemspec is provided, Team Foundation Server performs a recursive get operation on all items that are mapped in the current workspace.')
  .option('-a, --all', 'The user-provided value for the /version option. For more information about how Team Foundation Server parses a version specification to determine which items are within its scope, see Command-Line Syntax (Version Control).')
  .option('-o, --overwrite', 'Provides a value to the /login option. You can specify a username value as either DOMAIN\\UserName or UserName.')
  .option('-f, --force', 'Optional version specification. The versionspec is the version of the item you want to retrieve. You can specify a version by:')
  .option('-p, --preview', 'Forces all files to be retrieved, not just those that are out-of-date.')
  .option('-r, --recursive', 'Overwrites writable files that are not checked out.')
  .option('-n, --noprompt', 'Combines /all and /overwrite.')
  .option('-r, --remap', 'Displays what would occur, without actually performing the Get operation.')
  .option('-l, --login', 'Recursively retrieves all items that match your itemspec.')
  .option('-V, --verbose', 'Verbose mode.')
  .parse(process.argv);

var options = {
  version: program.version,
  all: program.all,
  overwrite: program.overwrite,
  force: program.force,
  preview: program.preview,
  recursive: program.recursive,
  noprompt: program.noprompt,
  remap: program.remap,
  login: program.login,
  verbose: program.verbose
};

tfsGet(program.args, options);
